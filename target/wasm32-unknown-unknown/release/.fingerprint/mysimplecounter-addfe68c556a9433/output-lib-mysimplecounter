{"message":"expected one of `:`, `@`, or `|`, found `msg`","code":null,"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":861,"byte_end":861,"line_start":22,"line_end":22,"column_start":59,"column_end":59,"is_primary":false,"text":[{"text":"    env: Env,secret10dxl2rustyn0rkqa9qmtkrxvsdpdrgpe46yugn","highlight_start":59,"highlight_end":59}],"label":"expected one of `:`, `@`, or `|`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":866,"byte_end":869,"line_start":23,"line_end":23,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    msg: InitMsg,","highlight_start":5,"highlight_end":8}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `:`, `@`, or `|`, found `msg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    env: Env,secret10dxl2rustyn0rkqa9qmtkrxvsdpdrgpe46yugn\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected one of `:`, `@`, or `|`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    msg: InitMsg,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}
{"message":"expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `query`","code":null,"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":8751,"byte_end":8756,"line_start":262,"line_end":262,"column_start":46,"column_end":51,"is_primary":true,"text":[{"text":"    for voter in &a_poll.voter_info {returns query values as binary","highlight_start":46,"highlight_end":51}],"label":"expected one of 8 possible tokens","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `query`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:262:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    for voter in &a_poll.voter_info {returns query values as binary\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of 8 possible tokens\u001b[0m\n\n"}
{"message":"expected `:`, found keyword `pub`","code":null,"level":"error","spans":[{"file_name":"src/msg.rs","byte_start":1170,"byte_end":1170,"line_start":46,"line_end":46,"column_start":44,"column_end":44,"is_primary":false,"text":[{"text":"    pub quorum_percentage: Option<u8>,token","highlight_start":44,"highlight_end":44}],"label":"expected `:`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/msg.rs","byte_start":1175,"byte_end":1178,"line_start":47,"line_end":47,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    pub end_height: Option<u64>,","highlight_start":5,"highlight_end":8}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `:`, found keyword `pub`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/msg.rs:47:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub quorum_percentage: Option<u8>,token\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `:`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub end_height: Option<u64>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}
{"message":"expected one of `!` or `::`, found `#`","code":null,"level":"error","spans":[{"file_name":"src/state.rs","byte_start":569,"byte_end":569,"line_start":19,"line_end":19,"column_start":8,"column_end":8,"is_primary":false,"text":[{"text":"}config","highlight_start":8,"highlight_end":8}],"label":"expected one of `!` or `::`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/state.rs","byte_start":571,"byte_end":572,"line_start":21,"line_end":21,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"#[derive(Default, Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","highlight_start":1,"highlight_end":2}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected one of `!` or `::`, found `#`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/state.rs:21:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m}config\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected one of `!` or `::`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[derive(Default, Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}
{"message":"unresolved imports `crate::state::bank`, `crate::state::bank_read`, `crate::state::config`, `crate::state::config_read`, `crate::state::poll`, `crate::state::poll_read`, `crate::state::Poll`, `crate::state::PollStatus`, `crate::state::State`, `crate::state::Voter`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nPaths in `use` statements are relative to the crate root. To import items\nrelative to the current and parent modules, use the `self::` and `super::`\nprefixes, respectively. Also verify that you didn't misspell the import\nname and that the import exists in the module from where you tried to\nimport it. Example:\n\n```\nuse self::something::Foo; // ok!\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nOr, if you tried to use a module from an external crate, you may have missed\nthe `extern crate` declaration (which is usually placed in the crate root):\n\n```\nextern crate core; // Required to use the `core` crate\n\nuse core::any;\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":187,"byte_end":191,"line_start":6,"line_end":6,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":5,"highlight_end":9}],"label":"no `bank` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":193,"byte_end":202,"line_start":6,"line_end":6,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":11,"highlight_end":20}],"label":"no `bank_read` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":204,"byte_end":210,"line_start":6,"line_end":6,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":22,"highlight_end":28}],"label":"no `config` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":212,"byte_end":223,"line_start":6,"line_end":6,"column_start":30,"column_end":41,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":30,"highlight_end":41}],"label":"no `config_read` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":225,"byte_end":229,"line_start":6,"line_end":6,"column_start":43,"column_end":47,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":43,"highlight_end":47}],"label":"no `poll` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":231,"byte_end":240,"line_start":6,"line_end":6,"column_start":49,"column_end":58,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":49,"highlight_end":58}],"label":"no `poll_read` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":242,"byte_end":246,"line_start":6,"line_end":6,"column_start":60,"column_end":64,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":60,"highlight_end":64}],"label":"no `Poll` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":248,"byte_end":258,"line_start":6,"line_end":6,"column_start":66,"column_end":76,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":66,"highlight_end":76}],"label":"no `PollStatus` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":260,"byte_end":265,"line_start":6,"line_end":6,"column_start":78,"column_end":83,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":78,"highlight_end":83}],"label":"no `State` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":267,"byte_end":272,"line_start":6,"line_end":6,"column_start":85,"column_end":90,"is_primary":true,"text":[{"text":"    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,","highlight_start":85,"highlight_end":90}],"label":"no `Voter` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `crate::state::bank`, `crate::state::bank_read`, `crate::state::config`, `crate::state::config_read`, `crate::state::poll`, `crate::state::poll_read`, `crate::state::Poll`, `crate::state::PollStatus`, `crate::state::State`, `crate::state::Voter`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    bank, bank_read, config, config_read, poll, poll_read, Poll, PollStatus, State, Voter,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Voter` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `State` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `PollStatus` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Poll` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `poll_read` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `poll` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `config_read` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `config` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `bank_read` in `state`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `bank` in `state`\u001b[0m\n\n"}
{"message":"unresolved import `crate::state::PollStatus`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nPaths in `use` statements are relative to the crate root. To import items\nrelative to the current and parent modules, use the `self::` and `super::`\nprefixes, respectively. Also verify that you didn't misspell the import\nname and that the import exists in the module from where you tried to\nimport it. Example:\n\n```\nuse self::something::Foo; // ok!\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nOr, if you tried to use a module from an external crate, you may have missed\nthe `extern crate` declaration (which is usually placed in the crate root):\n\n```\nextern crate core; // Required to use the `core` crate\n\nuse core::any;\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/msg.rs","byte_start":4,"byte_end":28,"line_start":1,"line_end":1,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use crate::state::PollStatus;","highlight_start":5,"highlight_end":29}],"label":"no `PollStatus` in `state`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `crate::state::PollStatus`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/msg.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::state::PollStatus;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `PollStatus` in `state`\u001b[0m\n\n"}
{"message":"cannot find value `msg` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":937,"byte_end":940,"line_start":26,"line_end":26,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"        denom: msg.denom,","highlight_start":16,"highlight_end":19}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `msg` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:26:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        denom: msg.denom,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find value `key` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":14947,"byte_end":14950,"line_start":461,"line_end":461,"column_start":56,"column_end":59,"is_primary":true,"text":[{"text":"    let poll = match poll_read(&deps.storage).may_load(key.as_bytes())? {","highlight_start":56,"highlight_end":59}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `key` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:461:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let poll = match poll_read(&deps.storage).may_load(key.as_bytes())? {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"unused import: `InitMsg`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":107,"byte_end":114,"line_start":3,"line_end":3,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"    CreatePollResponse, HandleMsg, InitMsg, PollResponse, QueryMsg, TokenStakeResponse,","highlight_start":36,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":105,"byte_end":114,"line_start":3,"line_end":3,"column_start":34,"column_end":43,"is_primary":true,"text":[{"text":"    CreatePollResponse, HandleMsg, InitMsg, PollResponse, QueryMsg, TokenStakeResponse,","highlight_start":34,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `InitMsg`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:3:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    CreatePollResponse, HandleMsg, InitMsg, PollResponse, QueryMsg, TokenStakeResponse,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"type annotations needed","code":{"code":"E0283","explanation":"An implementation cannot be chosen unambiguously because of lack of information.\n\nErroneous code example:\n\n```compile_fail,E0283\ntrait Generator {\n    fn create() -> u32;\n}\n\nstruct Impl;\n\nimpl Generator for Impl {\n    fn create() -> u32 { 1 }\n}\n\nstruct AnotherImpl;\n\nimpl Generator for AnotherImpl {\n    fn create() -> u32 { 2 }\n}\n\nfn main() {\n    let cont: u32 = Generator::create();\n    // error, impossible to choose one of Generator trait implementation\n    // Should it be Impl or AnotherImpl, maybe something else?\n}\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to use a concrete\ntype:\n\n```\ntrait Generator {\n    fn create() -> u32;\n}\n\nstruct AnotherImpl;\n\nimpl Generator for AnotherImpl {\n    fn create() -> u32 { 2 }\n}\n\nfn main() {\n    let gen1 = AnotherImpl::create();\n\n    // if there are multiple methods with same name (different traits)\n    let gen2 = <AnotherImpl as Generator>::create();\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":2278,"byte_end":2285,"line_start":73,"line_end":73,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                do_init(","highlight_start":17,"highlight_end":24}],"label":"cannot infer type for type parameter `U` declared on the function `do_init`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":3308,"byte_end":3375,"line_start":105,"line_end":105,"column_start":9,"column_end":76,"is_primary":false,"text":[{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":9,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":125,"byte_end":170,"line_start":10,"line_end":10,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"cosmwasm_std::create_entry_points!(contract);","highlight_start":1,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cosmwasm_std::create_entry_points!","def_site_span":{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::create_entry_points!","def_site_span":{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/exports.rs","byte_start":2075,"byte_end":2084,"line_start":59,"line_end":59,"column_start":8,"column_end":17,"is_primary":false,"text":[{"text":"    U: Serialize + Clone + fmt::Debug + PartialEq + JsonSchema,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `cosmwasm_std::exports::do_init`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"cannot satisfy `_: msg::_::_serde::Serialize`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider specifying the type arguments in the function call","code":null,"level":"help","spans":[{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":2285,"byte_end":2285,"line_start":73,"line_end":73,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"                do_init(","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"::<T, U>","suggestion_applicability":"HasPlaceholders","expansion":{"span":{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":3308,"byte_end":3375,"line_start":105,"line_end":105,"column_start":9,"column_end":76,"is_primary":false,"text":[{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":9,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/lib.rs","byte_start":125,"byte_end":170,"line_start":10,"line_end":10,"column_start":1,"column_end":46,"is_primary":false,"text":[{"text":"cosmwasm_std::create_entry_points!(contract);","highlight_start":1,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"cosmwasm_std::create_entry_points!","def_site_span":{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::create_entry_points!","def_site_span":{"file_name":"/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/entry_points.rs","byte_start":1476,"byte_end":3384,"line_start":49,"line_end":107,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! create_entry_points {","highlight_start":1,"highlight_end":35},{"text":"    (@migration; $contract:ident, true) => {","highlight_start":1,"highlight_end":45},{"text":"        #[no_mangle]","highlight_start":1,"highlight_end":21},{"text":"        extern \"C\" fn migrate(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":67},{"text":"            do_migrate(","highlight_start":1,"highlight_end":24},{"text":"                &$contract::migrate::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":86},{"text":"                env_ptr,","highlight_start":1,"highlight_end":25},{"text":"                msg_ptr,","highlight_start":1,"highlight_end":25},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@migration; $contract:ident, false) => {};","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    (@inner; $contract:ident, migration = $migration:tt) => {","highlight_start":1,"highlight_end":62},{"text":"        mod wasm {","highlight_start":1,"highlight_end":19},{"text":"            use super::$contract;","highlight_start":1,"highlight_end":34},{"text":"            use cosmwasm_std::{","highlight_start":1,"highlight_end":32},{"text":"                do_handle, do_init, do_migrate, do_query, ExternalApi, ExternalQuerier,","highlight_start":1,"highlight_end":88},{"text":"                ExternalStorage,","highlight_start":1,"highlight_end":33},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn init(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":68},{"text":"                do_init(","highlight_start":1,"highlight_end":25},{"text":"                    &$contract::init::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":87},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn handle(env_ptr: u32, msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":70},{"text":"                do_handle(","highlight_start":1,"highlight_end":27},{"text":"                    &$contract::handle::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":89},{"text":"                    env_ptr,","highlight_start":1,"highlight_end":29},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[no_mangle]","highlight_start":1,"highlight_end":25},{"text":"            extern \"C\" fn query(msg_ptr: u32) -> u32 {","highlight_start":1,"highlight_end":55},{"text":"                do_query(","highlight_start":1,"highlight_end":26},{"text":"                    &$contract::query::<ExternalStorage, ExternalApi, ExternalQuerier>,","highlight_start":1,"highlight_end":88},{"text":"                    msg_ptr,","highlight_start":1,"highlight_end":29},{"text":"                )","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $crate::create_entry_points!(@migration; $contract, $migration);","highlight_start":1,"highlight_end":77},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // Other C externs like cosmwasm_vm_version_3, allocate, deallocate are available","highlight_start":1,"highlight_end":94},{"text":"            // automatically because we `use cosmwasm_std`.","highlight_start":1,"highlight_end":60},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($contract:ident) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::create_entry_points!(@inner; $contract, migration = false);","highlight_start":1,"highlight_end":76},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0283]\u001b[0m\u001b[0m\u001b[1m: type annotations needed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mcosmwasm_std::create_entry_points!(contract);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot infer type for type parameter `U` declared on the function `do_init`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ben/.cargo/git/checkouts/secretnetwork-2885a5c51d1243af/0c6aae9/cosmwasm/packages/std/src/exports.rs:59:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    U: Serialize + Clone + fmt::Debug + PartialEq + JsonSchema,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by this bound in `cosmwasm_std::exports::do_init`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: cannot satisfy `_: msg::_::_serde::Serialize`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider specifying the type arguments in the function call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                do_init::<T, U>(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 9 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 9 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0283, E0425, E0432.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0283, E0425, E0432.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0283`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0283`.\u001b[0m\n"}
